/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedChatsIndexImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedProductsOverviewImport } from './routes/_authenticated/products/overview'
import { Route as AuthenticatedProductsNewImport } from './routes/_authenticated/products/new'
import { Route as AuthenticatedOrdersOverviewImport } from './routes/_authenticated/orders/overview'
import { Route as AuthenticatedOrdersDetailsImport } from './routes/_authenticated/orders/details'
import { Route as AuthenticatedCustomersDetailsImport } from './routes/_authenticated/customers/details'
import { Route as AuthenticatedCouponsOverviewImport } from './routes/_authenticated/coupons/overview'
import { Route as AuthenticatedCouponsNewImport } from './routes/_authenticated/coupons/new'
import { Route as AuthenticatedCategoriesOverviewImport } from './routes/_authenticated/categories/overview'
import { Route as AuthenticatedProductsIdEditImport } from './routes/_authenticated/products/$id/edit'
import { Route as AuthenticatedOrdersIdDetailsImport } from './routes/_authenticated/orders/$id/details'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedProductsOverviewRoute =
  AuthenticatedProductsOverviewImport.update({
    id: '/products/overview',
    path: '/products/overview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsNewRoute = AuthenticatedProductsNewImport.update({
  id: '/products/new',
  path: '/products/new',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedOrdersOverviewRoute =
  AuthenticatedOrdersOverviewImport.update({
    id: '/orders/overview',
    path: '/orders/overview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOrdersDetailsRoute = AuthenticatedOrdersDetailsImport.update(
  {
    id: '/orders/details',
    path: '/orders/details',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedCustomersDetailsRoute =
  AuthenticatedCustomersDetailsImport.update({
    id: '/customers/details',
    path: '/customers/details',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCouponsOverviewRoute =
  AuthenticatedCouponsOverviewImport.update({
    id: '/coupons/overview',
    path: '/coupons/overview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCouponsNewRoute = AuthenticatedCouponsNewImport.update({
  id: '/coupons/new',
  path: '/coupons/new',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedCategoriesOverviewRoute =
  AuthenticatedCategoriesOverviewImport.update({
    id: '/categories/overview',
    path: '/categories/overview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsIdEditRoute =
  AuthenticatedProductsIdEditImport.update({
    id: '/products/$id/edit',
    path: '/products/$id/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOrdersIdDetailsRoute =
  AuthenticatedOrdersIdDetailsImport.update({
    id: '/orders/$id/details',
    path: '/orders/$id/details',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/categories/overview': {
      id: '/_authenticated/categories/overview'
      path: '/categories/overview'
      fullPath: '/categories/overview'
      preLoaderRoute: typeof AuthenticatedCategoriesOverviewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/coupons/new': {
      id: '/_authenticated/coupons/new'
      path: '/coupons/new'
      fullPath: '/coupons/new'
      preLoaderRoute: typeof AuthenticatedCouponsNewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/coupons/overview': {
      id: '/_authenticated/coupons/overview'
      path: '/coupons/overview'
      fullPath: '/coupons/overview'
      preLoaderRoute: typeof AuthenticatedCouponsOverviewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customers/details': {
      id: '/_authenticated/customers/details'
      path: '/customers/details'
      fullPath: '/customers/details'
      preLoaderRoute: typeof AuthenticatedCustomersDetailsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/orders/details': {
      id: '/_authenticated/orders/details'
      path: '/orders/details'
      fullPath: '/orders/details'
      preLoaderRoute: typeof AuthenticatedOrdersDetailsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/orders/overview': {
      id: '/_authenticated/orders/overview'
      path: '/orders/overview'
      fullPath: '/orders/overview'
      preLoaderRoute: typeof AuthenticatedOrdersOverviewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/new': {
      id: '/_authenticated/products/new'
      path: '/products/new'
      fullPath: '/products/new'
      preLoaderRoute: typeof AuthenticatedProductsNewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/overview': {
      id: '/_authenticated/products/overview'
      path: '/products/overview'
      fullPath: '/products/overview'
      preLoaderRoute: typeof AuthenticatedProductsOverviewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/orders/$id/details': {
      id: '/_authenticated/orders/$id/details'
      path: '/orders/$id/details'
      fullPath: '/orders/$id/details'
      preLoaderRoute: typeof AuthenticatedOrdersIdDetailsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/$id/edit': {
      id: '/_authenticated/products/$id/edit'
      path: '/products/$id/edit'
      fullPath: '/products/$id/edit'
      preLoaderRoute: typeof AuthenticatedProductsIdEditImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCategoriesOverviewRoute: typeof AuthenticatedCategoriesOverviewRoute
  AuthenticatedCouponsNewRoute: typeof AuthenticatedCouponsNewRoute
  AuthenticatedCouponsOverviewRoute: typeof AuthenticatedCouponsOverviewRoute
  AuthenticatedCustomersDetailsRoute: typeof AuthenticatedCustomersDetailsRoute
  AuthenticatedOrdersDetailsRoute: typeof AuthenticatedOrdersDetailsRoute
  AuthenticatedOrdersOverviewRoute: typeof AuthenticatedOrdersOverviewRoute
  AuthenticatedProductsNewRoute: typeof AuthenticatedProductsNewRoute
  AuthenticatedProductsOverviewRoute: typeof AuthenticatedProductsOverviewRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedOrdersIdDetailsRoute: typeof AuthenticatedOrdersIdDetailsRoute
  AuthenticatedProductsIdEditRoute: typeof AuthenticatedProductsIdEditRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCategoriesOverviewRoute: AuthenticatedCategoriesOverviewRoute,
  AuthenticatedCouponsNewRoute: AuthenticatedCouponsNewRoute,
  AuthenticatedCouponsOverviewRoute: AuthenticatedCouponsOverviewRoute,
  AuthenticatedCustomersDetailsRoute: AuthenticatedCustomersDetailsRoute,
  AuthenticatedOrdersDetailsRoute: AuthenticatedOrdersDetailsRoute,
  AuthenticatedOrdersOverviewRoute: AuthenticatedOrdersOverviewRoute,
  AuthenticatedProductsNewRoute: AuthenticatedProductsNewRoute,
  AuthenticatedProductsOverviewRoute: AuthenticatedProductsOverviewRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedOrdersIdDetailsRoute: AuthenticatedOrdersIdDetailsRoute,
  AuthenticatedProductsIdEditRoute: AuthenticatedProductsIdEditRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/categories/overview': typeof AuthenticatedCategoriesOverviewRoute
  '/coupons/new': typeof AuthenticatedCouponsNewRoute
  '/coupons/overview': typeof AuthenticatedCouponsOverviewRoute
  '/customers/details': typeof AuthenticatedCustomersDetailsRoute
  '/orders/details': typeof AuthenticatedOrdersDetailsRoute
  '/orders/overview': typeof AuthenticatedOrdersOverviewRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/products/overview': typeof AuthenticatedProductsOverviewRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/orders/$id/details': typeof AuthenticatedOrdersIdDetailsRoute
  '/products/$id/edit': typeof AuthenticatedProductsIdEditRoute
}

export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/categories/overview': typeof AuthenticatedCategoriesOverviewRoute
  '/coupons/new': typeof AuthenticatedCouponsNewRoute
  '/coupons/overview': typeof AuthenticatedCouponsOverviewRoute
  '/customers/details': typeof AuthenticatedCustomersDetailsRoute
  '/orders/details': typeof AuthenticatedOrdersDetailsRoute
  '/orders/overview': typeof AuthenticatedOrdersOverviewRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/products/overview': typeof AuthenticatedProductsOverviewRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/orders/$id/details': typeof AuthenticatedOrdersIdDetailsRoute
  '/products/$id/edit': typeof AuthenticatedProductsIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/categories/overview': typeof AuthenticatedCategoriesOverviewRoute
  '/_authenticated/coupons/new': typeof AuthenticatedCouponsNewRoute
  '/_authenticated/coupons/overview': typeof AuthenticatedCouponsOverviewRoute
  '/_authenticated/customers/details': typeof AuthenticatedCustomersDetailsRoute
  '/_authenticated/orders/details': typeof AuthenticatedOrdersDetailsRoute
  '/_authenticated/orders/overview': typeof AuthenticatedOrdersOverviewRoute
  '/_authenticated/products/new': typeof AuthenticatedProductsNewRoute
  '/_authenticated/products/overview': typeof AuthenticatedProductsOverviewRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/orders/$id/details': typeof AuthenticatedOrdersIdDetailsRoute
  '/_authenticated/products/$id/edit': typeof AuthenticatedProductsIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/categories/overview'
    | '/coupons/new'
    | '/coupons/overview'
    | '/customers/details'
    | '/orders/details'
    | '/orders/overview'
    | '/products/new'
    | '/products/overview'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/orders/$id/details'
    | '/products/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/categories/overview'
    | '/coupons/new'
    | '/coupons/overview'
    | '/customers/details'
    | '/orders/details'
    | '/orders/overview'
    | '/products/new'
    | '/products/overview'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/orders/$id/details'
    | '/products/$id/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/categories/overview'
    | '/_authenticated/coupons/new'
    | '/_authenticated/coupons/overview'
    | '/_authenticated/customers/details'
    | '/_authenticated/orders/details'
    | '/_authenticated/orders/overview'
    | '/_authenticated/products/new'
    | '/_authenticated/products/overview'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/orders/$id/details'
    | '/_authenticated/products/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/categories/overview",
        "/_authenticated/coupons/new",
        "/_authenticated/coupons/overview",
        "/_authenticated/customers/details",
        "/_authenticated/orders/details",
        "/_authenticated/orders/overview",
        "/_authenticated/products/new",
        "/_authenticated/products/overview",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/orders/$id/details",
        "/_authenticated/products/$id/edit"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories/overview": {
      "filePath": "_authenticated/categories/overview.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/coupons/new": {
      "filePath": "_authenticated/coupons/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/coupons/overview": {
      "filePath": "_authenticated/coupons/overview.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers/details": {
      "filePath": "_authenticated/customers/details.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orders/details": {
      "filePath": "_authenticated/orders/details.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orders/overview": {
      "filePath": "_authenticated/orders/overview.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/new": {
      "filePath": "_authenticated/products/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/overview": {
      "filePath": "_authenticated/products/overview.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orders/$id/details": {
      "filePath": "_authenticated/orders/$id/details.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/$id/edit": {
      "filePath": "_authenticated/products/$id/edit.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
